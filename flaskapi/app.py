# app.py
from flask import Flask, request, jsonify
import pickle
import numpy as np
import pandas as pd
from sklearn.linear_model import Ridge

app = Flask(__name__)

# Load the trained model
with open('model.pkl', 'rb') as model_file:
    lm_r = pickle.load(model_file)

@app.route('/predict', methods=['POST'])
def predict():
    try:
        # Get the JSON data from the request
        data = request.get_json()

        # Validate that all necessary fields are present
        required_fields = ['rooms', 'bathrooms', 'square_feet','location']
        for field in required_fields:
            if field not in data:
                return jsonify({"error": f"Missing field: {field}"}), 400
    
        input_data = {
            'MS SubClass' : 0,              
            'Lot Frontage' :0,          
            'Lot Area' :  0,                
            'Overall Qual' :0 ,          
            'Overall Cond' : 0 ,         
            'Year Built' : 0 ,             
            'Year Remod/Add': 0,          
            'Mas Vnr Area':0,         
            'BsmtFin SF 1': 0 ,        
            'Bsmt Unf SF':0,          
            'Total Bsmt SF':0,          
            '1st Flr SF': 0,              
            '2nd Flr SF':0,              
            'Low Qual Fin SF': 0,          
            'Gr Liv Area': data['square_feet'],                      
            'bathrooms' : data['bathrooms'],                              
            'Bedroom AbvGr' : data['rooms'],            
            'Kitchen AbvGr' : 0,           
            'TotRms AbvGrd' : 0,             
            'Fireplaces' :  0,              
            'Garage Yr Blt' : 0,          
            'Garage Cars' :0,             
            'Garage Area' :0,             
            'Wood Deck SF' :0,              
            'Open Porch SF' : 0,           
            'Mo Sold':0,                   
            'Yr Sold' :0,                                    
            'MS Zoning_C (all)' : False,     
            'MS Zoning_FV': False,             
            'MS Zoning_I (all)' : False,         
            'MS Zoning_RH' :False,              
            'MS Zoning_RL' :False,        
            'MS Zoning_RM' : False,         
            'Street_Pave' :False,               
            'Lot Shape_IR2' : False,             
            'Lot Shape_IR3' :False,           
            'Lot Shape_Reg' :False,              
            'Land Contour_HLS' :False,         
            'Land Contour_Low' :False,        
            'Land Contour_Lvl' :False,        
            'Utilities_NoSeWa' :False,        
            'Utilities_NoSewr' :False,         
            'Lot Config_CulDSac' :False,      
            'Lot Config_FR2' :False,          
            'Lot Config_FR3' :False,         
            'Lot Config_Inside' :False,         
            'Land Slope_Mod' :False,            
            'Land Slope_Sev' :False,            
            'Neighborhood_Blueste' : False,     
            'Neighborhood_BrDale' : False,       
            'Neighborhood_BrkSide' : False,      
            'Neighborhood_ClearCr' : False,      
            'Neighborhood_CollgCr' :False,      
            'Neighborhood_Crawfor' : False,      
            'Neighborhood_Edwards' : False,     
            'Neighborhood_Gilbert' :False,       
            'Neighborhood_Greens' : False,       
            'Neighborhood_GrnHill' : False,     
            'Neighborhood_IDOTRR' : False,       
            'Neighborhood_Landmrk' :False,      
            'Neighborhood_MeadowV' : False,      
            'Neighborhood_Mitchel' : False,     
            'Neighborhood_NAmes' : False,       
            'Neighborhood_NPkVill' :False,      
            'Neighborhood_NWAmes' :False,       
            'Neighborhood_NoRidge' :False,       
            'Neighborhood_NridgHt' : False,     
            'Neighborhood_OldTown' :False,       
            'Neighborhood_SWISU' : False,       
            'Neighborhood_Sawyer' :False,        
            'Neighborhood_SawyerW' :False,     
            'Neighborhood_Somerst' : False,    
            'Neighborhood_StoneBr' : False,     
            'Neighborhood_Timber' : False,     
            'Neighborhood_Veenker' :False,     
            'Condition 1_Feedr' :False,          
            'Condition 1_Norm' :False,           
            'Condition 1_PosA' :False,           
            'Condition 1_PosN' :False,           
            'Condition 1_RRAe' :False,         
            'Condition 1_RRAn' :False,          
            'Condition 1_RRNe' :False,           
            'Condition 1_RRNn' :False,          
            'Condition 2_Feedr' :False,        
            'Condition 2_Norm' :False,          
            'Condition 2_PosA' :False,           
            'Condition 2_PosN' :False,         
            'Condition 2_RRAe' :False,          
            'Condition 2_RRAn' :False,        
            'Condition 2_RRNn' :False,        
            'Bldg Type_2fmCon' :False,        
            'Bldg Type_Duplex' :False,        
            'Bldg Type_Twnhs' :False,         
            'Bldg Type_TwnhsE' :False,        
            'House Style_1.5Unf' :False,     
            'House Style_1Story' :False,      
            'House Style_2.5Fin' :False,     
            'House Style_2.5Unf' :False,      
            'Style_2Story' :False,     
            'House Style_SFoyer' :False,     
            'House Style_SLvl' :False,       
            'Roof Style_Gable' :False,       
            'Roof Style_Gambrel' :False,      
            'Roof Style_Hip' :False,         
            'Roof Style_Mansard' :False,    
            'Roof Style_Shed' :False,       
            'Roof Matl_Membran' :False,     
            'Roof Matl_Metal' :False,         
            'Roof Matl_Roll' :False,         
            'Roof Matl_Tar&Grv' :False,         
            'Roof Matl_WdShake' :False,         
            'Roof Matl_WdShngl' :False,       
            'Exterior 1st_AsphShn' :False,       
            'Exterior 1st_BrkComm' :False,       
            'Exterior 1st_BrkFace' :False,    
            'Exterior 1st_CBlock' :False,      
            'Exterior 1st_CemntBd' :False,      
            'Exterior 1st_HdBoard' :False,    
            'Exterior 1st_ImStucc' :False,     
            'Exterior 1st_MetalSd' :False,      
            'Exterior 1st_Plywood' :False,    
            'Exterior 1st_PreCast' :False,      
            'Exterior 1st_Stone' :False,       
            'Exterior 1st_Stucco' : False,      
            'Exterior 1st_VinylSd' :False,      
            'Exterior 1st_Wd Sdng' :False,     
            'Exterior 1st_WdShing' :False,     
            'Exterior 2nd_AsphShn' :False,     
            'Exterior 2nd_Brk Cmn' :False,      
            'Exterior 2nd_BrkFace' :False,      
            'Exterior 2nd_CBlock' : False,     
            'Exterior 2nd_CmentBd' :False,      
            'Exterior 2nd_HdBoard' :False,      
            'Exterior 2nd_ImStucc' :False,       
            'Exterior 2nd_MetalSd' :False,      
            'Exterior 2nd_Other' :  False,      
            'Exterior 2nd_Plywood' :False,      
            'Exterior 2nd_PreCast' :False,      
            'Exterior 2nd_Stone' :  False,      
            'Exterior 2nd_Stucco' : False,    
            'Exterior 2nd_VinylSd' :False,    
            'Exterior 2nd_Wd Sdng' :False,       
            'Exterior 2nd_Wd Shng' :False,     
            'Mas Vnr Type_BrkFace' :False,      
            'Mas Vnr Type_CBlock' : False,     
            'Mas Vnr Type_Stone' :  False,    
            'Exter Qual_Fa' : False,             
            'Exter Qual_Gd' : False,            
            'Exter Qual_TA' : False,            
            'Exter Cond_Fa' : False,            
            'Exter Cond_Gd' : False,            
            'Exter Cond_Po' : False,          
            'Exter Cond_TA' : False,          
            'Foundation_CBlock' :False,        
            'Foundation_PConc' : False,        
            'Foundation_Slab' :  False,         
            'Foundation_Stone' : False,       
            'Foundation_Wood' :  False,       
            'Bsmt Qual_Fa' : False,           
            'Bsmt Qual_Gd' : False,            
            'Bsmt Qual_Po' : False,           
            'Bsmt Qual_TA' : False,           
            'Bsmt Cond_Fa' : False,          
            'Bsmt Cond_Gd' : False,           
            'Bsmt Cond_Po' : False,           
            'Bsmt Cond_TA' : False,          
            'Bsmt Exposure_Gd' : False,       
            'Bsmt Exposure_Mn' : False,        
            'Bsmt Exposure_No' : False,       
            'BsmtFin Type 1_BLQ' :False,     
            'BsmtFin Type 1_GLQ' :False,     
            'BsmtFin Type 1_LwQ' :False,     
            'BsmtFin Type 1_Rec' :False,      
            'BsmtFin Type 1_Unf' :False,     
            'BsmtFin Type 2_BLQ' :False,       
            'BsmtFin Type 2_GLQ' :False,      
            'BsmtFin Type 2_LwQ' :False,       
            'BsmtFin Type 2_Rec' :False,      
            'BsmtFin Type 2_Unf' :False,      
            'Heating_GasA' : False,           
            'Heating_GasW' : False,             
            'Heating_Grav' : False,            
            'Heating_OthW' : False,           
            'Heating_Wall' : False,           
            'Heating QC_Fa' : False,         
            'Heating QC_Gd' : False,          
            'Heating QC_Po' : False,          
            'Heating QC_TA' : False,          
            'Central Air_Y' : False,          
            'Electrical_FuseF' :False,         
            'Electrical_FuseP' : False,       
            'Electrical_Mix' : False,          
            'Electrical_SBrkr' :False,          
            'Kitchen Qual_Fa' :False,          
            'Kitchen Qual_Gd' :False,          
            'Kitchen Qual_Po' :False,          
            'Kitchen Qual_TA' :False,         
            'Functional_Maj2' :False,        
            'Functional_Min1' :False,          
            'Functional_Min2' :False,           
            'Functional_Mod' : False,          
            'Functional_Sal' : False,          
            'Functional_Sev' : False,        
            'Functional_Typ' : False,         
            'Fireplace Qu_Fa' :False,         
            'Fireplace Qu_Gd' :False,         
            'Fireplace Qu_Po' :False,         
            'Fireplace Qu_TA' :False,         
            'Garage Type_Attchd' :False,     
            'Garage Type_Basment' :False,     
            'Garage Type_BuiltIn' :False,     
            'Garage Type_CarPort' :False,     
            'Garage Type_Detchd' : False,       
            'Garage Finish_RFn' :False,        
            'Garage Finish_Unf' :False,       
            'Garage Qual_Fa' : False,          
            'Garage Qual_Gd' : False,          
            'Garage Qual_Po' : False,         
            'Garage Qual_TA' : False,         
            'Garage Cond_Fa' : False,           
            'Garage Cond_Gd' : False,         
            'Garage Cond_Po' : False,            
            'Garage Cond_TA' : False,            
            'Paved Drive_P ' : False,           
            'Paved Drive_Y ' : False,          
            'Sale Type_CWD ' : False,           
            'Sale Type_Con ' : False,          
            'Sale Type_ConLD' :False,           
            'Sale Type_ConLI' :False,           
            'Sale Type_ConLw' :False,            
            'Sale Type_New' : False,           
            'Sale Type_Oth' : False,          
            'Sale Type_VWD' :False,           
            'Sale Type_WD' :False,             
            'Sale Condition_AdjLand' :False,  
            'Sale Condition_Alloca' :False,     
            'Sale Condition_Family' :False,   
            'Sale Condition_Normal' :False,    
            'Sale Condition_Partial' :False,   
            # Placeholder value, adjust as needed
        }

        # Create a DataFrame from the input data
        input_df = pd.DataFrame([input_data])

        # Make prediction using the model
        prediction = lm_r.predict(input_df)[0]

        # Return the prediction as a JSON response
        return jsonify({"predicted_price": prediction})

    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)

